// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // Ajuste feito para utilizar o SQLite
  url      = env("DATABASE_URL")
}

model Clientes{
  id Int @id @default(autoincrement())
  nome String
  telefone String @unique
  email String @unique
  cidade String
  cep String
  rua String
  num_casa String
  complementos String 
  visita Visita?

}

model Pecas{
  id Int @id @default(autoincrement())
  descricao String
  especificao_peca_componente String
  valor_liquido_unitario String
  ncm String
  leadtime Int
  tempo_garantia Int
  
}


model Forncedores{
  cnpj Int @id @unique
  nome_empresa String
  razao_social String
  nome_vendedor String
  telefone_fornecedor Int
  dados_bancarios Int
  forma_recebimento String
  conducao_pagamento String
}

model Visita{
  id Int @id@default(autoincrement())
  clientes Clientes @relation(fields: [clienteId], references: [id])
  clienteId Int @unique
  tipoEdificao String 
  tipo_telha String
  localizacao_imovel String
  orientacao_telhado String
  inclinacao_telhado Int
  ponto_de_ancoragem String
  espaco_de_elevacao_ate_o_telhado Int
  informacoes_adicionais String
  
}
model Orcamento{
  id Int @id @default(autoincrement())
  clienteId Int @unique 
  visitaId Int @unique
  pecasid Int @unique
  nome_responsavel String 
  khw_consumido_ultimo_ano Int
  quantidade_pecas Int
  valor_instalacao Int
  valor_homologacao Int
  descontos Int
  forma_pagamento String
  prazo_instalacao Int
  prazo_homolagacao Int
}
